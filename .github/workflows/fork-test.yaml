name: fork-build-and-test
on:
  push: {}
  workflow_dispatch: {}
env:
  CONTAINER_REGISTRY: ghcr.io
defaults:
  run:
    shell: bash
jobs:
  lint_go_code:
    if: github.repository_owner != 'cncf'
    strategy:
      matrix:
        component: [ "left-leg", "right-leg", "left-arm", "right-arm", "hats", "main" ]
        version: [ "v1", "v2", "v3", "v4" ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: v1.29
          working-directory: podtato-services/${{ matrix.component }}
  build_images:
    if: github.repository_owner != 'cncf'
    needs: [lint_go_code]
    strategy:
      matrix:
        component: [ "left-leg", "right-leg", "left-arm", "right-arm", "hats", "main" ]
        version: [ "v1", "v2", "v3", "v4" ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.CONTAINER_REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ github.token }}
      - name: Build image and push to current fork
        id: docker_build_fork
        uses: docker/build-push-action@v2
        with:
          build-args: |
            VERSION=${{ matrix.version }}
          context: podtato-services/${{ matrix.component }}/.
          file: podtato-services/${{ matrix.component }}/docker/Dockerfile
          platforms: linux/amd64
          tags: |
            ${{ env.CONTAINER_REGISTRY }}/${{ github.repository_owner }}/podtato-head/podtato-${{ matrix.component }}:${{ matrix.version }}-latest-dev
  test_kubectl_delivery:
    if: github.repository_owner != 'cncf'
    name: Deliver with kubectl
    needs: [build_images]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Create kind cluster
        uses: helm/kind-action@v1.2.0
      - name: Test delivery with kubectl
        run: ./delivery/kubectl/test.sh "${{ github.repository_owner }}" "${{ github.token }}"
  test_helm_delivery:
    if: github.repository_owner != 'cncf'
    name: Deliver with Helm
    needs: [build_images]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Create kind cluster
        uses: helm/kind-action@v1.2.0
      - name: Test delivery with helm
        run: ./delivery/chart/test.sh "${{ github.repository_owner }}" "${{ github.token }}"
